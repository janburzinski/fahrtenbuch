package util

import (
	"testing"
)

func TestGenerateRandomByt(t *testing.T) {
	b, err := GenerateRandomBytes(32)
	if err != nil {
		t.Fatalf("error while generating random bytes: %s", err)
		return
	}

	if len(b) != 32 {
		t.Fatalf("Length of generated bytes is not equal to the given length")
	}
}

func TestValidEm(t *testing.T) {
	var tests = []struct {
		description   string
		email         string
		expectedError bool
	}{
		{
			description:   "valid email",
			email:         "miau@miau.com",
			expectedError: false,
		},
		{
			description:   "invalid email without @",
			email:         "invalid_email",
			expectedError: true,
		},
		{
			description:   "invalid email with @ but without domain ending",
			email:         "invalid_email@gmail",
			expectedError: true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.description, func(t *testing.T) {
			valid := ValidEmail(tt.email)
			if valid != !tt.expectedError {
				t.Logf("email: %s, expected: %v, desc: %s", tt.email, tt.expectedError, tt.description)
				t.Fail()
			}
		})
	}
}
